{"version":3,"sources":["webpack://majestic-gutenberg/./src/blocks/firstblock/edit.js","webpack://majestic-gutenberg/./src/blocks/firstblock/index.js","webpack://majestic-gutenberg/./src/blocks/inlineNotice/edit.js","webpack://majestic-gutenberg/./src/blocks/inlineNotice/index.js","webpack://majestic-gutenberg/./src/editor.js","webpack://majestic-gutenberg/external [\"wp\",\"blocks\"]","webpack://majestic-gutenberg/external [\"wp\",\"components\"]","webpack://majestic-gutenberg/external [\"wp\",\"element\"]","webpack://majestic-gutenberg/external [\"wp\",\"i18n\"]","webpack://majestic-gutenberg/webpack/bootstrap","webpack://majestic-gutenberg/webpack/runtime/compat get default export","webpack://majestic-gutenberg/webpack/runtime/define property getters","webpack://majestic-gutenberg/webpack/runtime/hasOwnProperty shorthand","webpack://majestic-gutenberg/webpack/runtime/make namespace object","webpack://majestic-gutenberg/webpack/startup"],"names":["InspectorControls","wp","blockEditor","PanelColorSettings","RichText","withColors","Edit","content","props","setAttributes","backgroundColor","attributes","setBackgroundColor","__","value","colo","onChange","label","onChangeContent","color","Component","registerBlockType","title","description","category","keywords","type","source","selector","customBackgroundColor","edit","save","headline","border","headlineBackgroundColor","setHeadlineBackgroundColor","headlineTextColor","setHeadlineTextColor","contentBackgroundColor","setContentBackgroundColor","contentTextColor","setContentTextColor","wrapperClassList","headerClassList","headerInlineStyles","contentInlineStyles","toggleBorder","onChangeHeadline","customHeadlineBackgroundColor","customHeadlineTextColor","customContentBackgroundColor","customContentTextColor"],"mappings":"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","file":"editor.js","sourcesContent":["import { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nconst InspectorControls = wp.blockEditor.InspectorControls;\nconst PanelColorSettings = wp.blockEditor.PanelColorSettings;\nconst RichText = wp.blockEditor.RichText;\nconst withColors = wp.blockEditor.withColors;\n\n/**\n * The class for editing the block in the gutenberg editor.\n */\nclass Edit extends Component {\n  /**\n   *\n   * @param {object} content\n   *   The content.\n   */\n  onChangeContent = content => {\n    this.props.setAttributes({ content });\n  };\n\n  /**\n   *\n   * @param {object} backgroundColor\n   *   The new background color.\n   */\n  onChangeBackgroundColor = backgroundColor => {\n    this.props.setAttributes({ backgroundColor });\n  };\n  render() {\n    const { attributes, backgroundColor, setBackgroundColor } = this.props;\n    const { content } = attributes;\n    return (\n      <>\n        {/* Edit functionality in the sidebar. */}\n        <InspectorControls>\n          <PanelColorSettings\n            title={__('Colors', 'majestic-gutenberg')}\n            colorSettings={[\n              {\n                value: backgroundColor.colo,\n                onChange: setBackgroundColor,\n                label: __('Background Color', 'majestic-gutenberg'),\n              },\n            ]}\n          />\n        </InspectorControls>\n        {/* Rich text. */}\n        <RichText\n          tagName=\"p\"\n          className=\"w-full\"\n          onChange={value => {\n            this.onChangeContent(value);\n          }}\n          style={{ backgroundColor: backgroundColor.color }}\n          value={content}\n        />\n      </>\n    );\n  }\n}\n\nexport default withColors('backgroundColor')(Edit);\n","import { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\nconst RichText = wp.blockEditor.RichText;\nimport Edit from './edit';\n//import { PanelBody } from '@wordpress/components';\n\nregisterBlockType('majestic-gutenberg/firstblock', {\n  title: __('First block', 'majestic-gutenberg'),\n  description: __('My First block', 'majestic-gutenberg'),\n  category: 'layout',\n  keywords: '',\n  attributes: {\n    content: {\n      type: 'string',\n      source: 'html',\n      selector: 'p',\n    },\n    backgroundColor: {\n      type: 'string',\n    },\n    customBackgroundColor: {\n      type: 'string',\n    },\n  },\n  edit: Edit,\n  save({ attributes }) {\n    const { content } = attributes;\n    return (\n      // Header.\n      <>\n        <RichText.Content\n          tagName=\"p\"\n          value={content}\n          className=\"w-full bg-red-700\"\n        />\n        {/* Content */}\n        <RichText.Content\n          tagName=\"p\"\n          value={content}\n          className=\"w-full bg-red-700\"\n        />\n      </>\n    );\n  },\n});\n","//==================================================\n// The edit functionality of the Inline Notice block.\n//==================================================\n\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nconst InspectorControls = wp.blockEditor.InspectorControls;\nconst PanelColorSettings = wp.blockEditor.PanelColorSettings;\nconst RichText = wp.blockEditor.RichText;\nconst withColors = wp.blockEditor.withColors;\nimport { PanelBody, PanelRow, ToggleControl } from '@wordpress/components';\n\n/**\n * The edit class.\n */\nclass Edit extends Component {\n  /**\n   * Change the headline text.\n   *\n   * @param {object} headline\n   *   The new headline.\n   */\n  onChangeHeadline = headline => {\n    this.props.setAttributes({ headline });\n  };\n\n  /**\n   * Change the content text.\n   *\n   * @param {object} content\n   *   The new content.\n   */\n  onChangeContent = content => {\n    this.props.setAttributes({ content });\n  };\n\n  /**\n   * The the border state.\n   */\n  toggleBorder = () => {\n    this.props.setAttributes({ border: !this.props.attributes.border });\n  };\n\n  /**\n   * The render method.\n   */\n  render() {\n    const {\n      attributes,\n      headlineBackgroundColor,\n      setHeadlineBackgroundColor,\n      headlineTextColor,\n      setHeadlineTextColor,\n      contentBackgroundColor,\n      setContentBackgroundColor,\n      contentTextColor,\n      setContentTextColor,\n    } = this.props;\n    const { headline, content, border } = attributes;\n\n    // The class list for the wrapper div. Depends on the border state.\n    const wrapperClassList = `w-full rounded ${\n      border ? 'border border-gray-700' : ''\n    }`;\n    ('');\n\n    // The class list applied to the header. Depends on state of background-color.\n    const headerClassList = `w-full border-gray-500 px-1 mt-0 mb-0 ${\n      headlineBackgroundColor.color ? '' : 'border-b'\n    }`;\n\n    // The inline styles for the header. They concern background and text color.\n    const headerInlineStyles = {\n      backgroundColor: headlineBackgroundColor.color,\n      color: headlineTextColor.color,\n    };\n\n    // The inline styles for the content. They concern background and text color.\n    const contentInlineStyles = {\n      backgroundColor: contentBackgroundColor.color,\n      color: contentTextColor.color,\n    };\n    // ==================================\n    // Return statement.\n    // ==================================\n    return (\n      <>\n        {/* Edit some functionality in the sidebar. */}\n        <InspectorControls>\n          <PanelColorSettings\n            title={__('Colors', 'majestic-gutenberg')}\n            colorSettings={[\n              {\n                value: headlineBackgroundColor.color,\n                onChange: setHeadlineBackgroundColor,\n                label: __('Headline Background Color', 'majestic-gutenberg'),\n              },\n              {\n                value: headlineTextColor.color,\n                onChange: setHeadlineTextColor,\n                label: __('Headline Text Color', 'majestic-gutenberg'),\n              },\n              {\n                value: contentBackgroundColor.color,\n                onChange: setContentBackgroundColor,\n                label: __('Content Background Color', 'majestic-gutenberg'),\n              },\n              {\n                value: contentTextColor.color,\n                onChange: setContentTextColor,\n                label: __('Content Text Color', 'majestic-gutenberg'),\n              },\n            ]}\n          />\n          <PanelBody title=\"Border\">\n            <PanelRow>\n              <ToggleControl\n                label={__('Show border?', 'majestic-gutenberg')}\n                checked={border}\n                onChange={this.toggleBorder}\n              />\n            </PanelRow>\n          </PanelBody>\n        </InspectorControls>\n\n        {/* Start the html output. */}\n        <div className={wrapperClassList}>\n          {/* Header Text */}\n          <RichText\n            tagName=\"h3\"\n            value={headline}\n            className={headerClassList}\n            onChange={headline => this.onChangeHeadline(headline)}\n            style={headerInlineStyles}\n          />\n\n          {/* Content text */}\n          <RichText\n            tagName=\"p\"\n            value={content}\n            className=\"w-full mt-1 px-1\"\n            onChange={content => this.onChangeContent(content)}\n            style={contentInlineStyles}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withColors(\n  'headlineBackgroundColor',\n  'headlineTextColor',\n  'contentBackgroundColor',\n  'contentTextColor',\n)(Edit);\n","//==================================================\n// The main functionality of the Inline Notice block.\n//==================================================\n\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\nconst RichText = wp.blockEditor.RichText;\nimport Edit from './edit';\n\n/**\n * Register a new blocktype.\n */\nregisterBlockType('majestic-gutenberg/inline-notice', {\n  // Meta info.\n  title: __('Inline Notice', 'majestic-gutenberg'),\n  description: __(\n    __('An Inline Notice Box where important information can be highlighted'),\n    'majestic-gutenberg',\n  ),\n  category: 'majestic-gutenberg-category',\n  keywords: 'information, text, info, notice, inline,',\n  // The main variables that define the content and layout of the block.\n  attributes: {\n    headline: {\n      type: 'string',\n      source: 'html',\n      selector: 'h3',\n    },\n    content: {\n      type: 'string',\n      source: 'html',\n      selector: 'p',\n    },\n    headlineBackgroundColor: {\n      type: 'string',\n    },\n    customHeadlineBackgroundColor: {\n      type: 'string',\n    },\n    headlineTextColor: {\n      type: 'string',\n    },\n    customHeadlineTextColor: {\n      type: 'string',\n    },\n    contentBackgroundColor: {\n      type: 'string',\n    },\n    customContentBackgroundColor: {\n      type: 'string',\n    },\n    contentTextColor: {\n      type: 'string',\n    },\n    customContentTextColor: {\n      type: 'string',\n    },\n    border: {\n      type: 'boolean',\n    },\n  },\n  /**\n   * Define the edit output of the block.\n   */\n  edit: Edit,\n  /**\n   * Define the frontend output of the block.\n   *\n   * @param {object} attributes\n   *   The attributes for the component.\n   */\n  save({ attributes }) {\n    const {\n      headline,\n      content,\n      headlineBackgroundColor,\n      customHeadlineBackgroundColor,\n      headlineTextColor,\n      customHeadlineTextColor,\n      contentBackgroundColor,\n      customContentBackgroundColor,\n      contentTextColor,\n      customContentTextColor,\n      border,\n    } = attributes;\n\n    // Classes for wrapper div. Depends on the border.\n    const wrapperClassList = border\n      ? 'w-full border border-gray-700 rounded'\n      : 'w-full';\n\n    // Classes for the headline div. Depends on border and background color.\n    const headerClassList = `w-full border-gray-500 m-0 py-1 px-2\n    ${border ? '' : 'rounded-sm'}\n    ${\n      headlineBackgroundColor || customHeadlineBackgroundColor ? '' : 'border-b'\n    }\n    `;\n\n    // The inline styles for the header. They concern background and text color.\n    const headerInlineStyles = {\n      backgroundColor: headlineBackgroundColor || customHeadlineBackgroundColor,\n      color: headlineTextColor || customHeadlineTextColor,\n    };\n\n    // The inline styles for the content. They concern background and text color.\n    const contentInlineStyles = {\n      backgroundColor: contentBackgroundColor || customContentBackgroundColor,\n      color: contentTextColor || customContentTextColor,\n    };\n\n    // ==================================\n    // Return statement.\n    // ==================================\n    return (\n      <>\n        <div className={wrapperClassList}>\n          {/* Header text. */}\n          <RichText.Content\n            tagName=\"h3\"\n            value={headline}\n            className={headerClassList}\n            style={headerInlineStyles}\n          />\n          {/* Content text. */}\n          <RichText.Content\n            tagName=\"p\"\n            value={content}\n            className=\"w-full py-1 px-2\"\n            style={contentInlineStyles}\n          />\n        </div>\n      </>\n    );\n  },\n});\n","// First block.\nimport './blocks/firstblock/index';\nimport './blocks/inlineNotice/index';\n","module.exports = wp.blocks;","module.exports = wp.components;","module.exports = wp.element;","module.exports = wp.i18n;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/editor.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}